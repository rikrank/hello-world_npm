name: ラベルに応じて package.json のバージョンを更新する
on:
  pull_request:
    branches:
      - master
    types:
      - labeled
      - unlabeled
jobs:
  check_release_label:
    runs-on: ubuntu-latest
    steps:
      - name: ラベルが無ければエラーを吐く
        if: |
          !contains(github.event.pull_request.labels.*.name, 'release:patch') &&
          !contains(github.event.pull_request.labels.*.name, 'release:minor') &&
          !contains(github.event.pull_request.labels.*.name, 'release:major')
        run: |
          echo "::error::リリースラベルを付与してください。labels: `release:patch`, `release:minor`, `release:major`"
          exit 1
  version_diff:
    if: |
        contains(github.event.pull_request.labels.*.name, 'release:patch') ||
        contains(github.event.pull_request.labels.*.name, 'release:minor') ||
        contains(github.event.pull_request.labels.*.name, 'release:major')
    runs-on: ubuntu-latest
    outputs:
      chagned: ${{ steps.get_diff.outputs.changed }}
    steps:
      - uses: actions/checkout@v3

      - name: マージ先を取得
        run: git fetch origin ${{ github.base_ref }} --depth=1

      - name: パージョンの変更を保持する
        id: get_diff
        run: echo "changed=$(git diff origin/${{ github.base_ref }} HEAD --relative "./package.json" | grep "^+.\+version" | wc -l)" >> $GITHUB_OUTPUT

  update_version:
    runs-on: ubuntu-latest
    needs: [version_diff]
    if: needs.version_diff.outputs.chagned == '0'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Gitの設定
        if: steps.diff.outputs.changed == '0'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: バージョンの更新(patch)
        if: contains(github.event.pull_request.labels.*.name, 'release:patch')
        run: yarn version --patch --no-git-tag-version

      - name: バージョンの更新(minor)
        if: contains(github.event.pull_request.labels.*.name, 'release:minor')
        run: yarn version --minor --no-git-tag-version

      - name: バージョンの更新(major)
        if: contains(github.event.pull_request.labels.*.name, 'release:major')
        run: yarn version --major --no-git-tag-version

      - name: 変更を PR にプッシュする
        run: |
          git add .
          git commit -m "v$(grep version package.json | awk -F \" '{print $4}')"
          git push origin HEAD

  publish_package:
    runs-on: ubuntu-latest
    needs: [update_version]

    steps:
      - name: パッケージの公開
        if: contains(github.event.pull_request.labels.*.name, 'release:patch') || contains(github.event.pull_request.labels.*.name, 'release:minor') || contains(github.event.pull_request.labels.*.name, 'release:major')
        run: |
          npm publish --access public --non-interactive --no-git-tag-version --new-version $(grep version package.json | awk -F \" '{print $4}')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
